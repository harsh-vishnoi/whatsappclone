[{"/home/harsh/Desktop/whatsapp/src/index.js":"1","/home/harsh/Desktop/whatsapp/src/App.js":"2","/home/harsh/Desktop/whatsapp/src/reportWebVitals.js":"3","/home/harsh/Desktop/whatsapp/src/Sidebar.js":"4","/home/harsh/Desktop/whatsapp/src/SideBarChat.js":"5","/home/harsh/Desktop/whatsapp/src/Chat.js":"6","/home/harsh/Desktop/whatsapp/src/firebase.js":"7","/home/harsh/Desktop/whatsapp/src/Login.js":"8","/home/harsh/Desktop/whatsapp/src/reducer.js":"9","/home/harsh/Desktop/whatsapp/src/StateProvider.js":"10","/home/harsh/Desktop/whatsapp/src/serviceWorker.js":"11"},{"size":773,"mtime":1609314572342,"results":"12","hashOfConfig":"13"},{"size":794,"mtime":1609314722504,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608123133605,"results":"15","hashOfConfig":"13"},{"size":1727,"mtime":1609580456549,"results":"16","hashOfConfig":"13"},{"size":1261,"mtime":1609864979366,"results":"17","hashOfConfig":"13"},{"size":2976,"mtime":1609863975139,"results":"18","hashOfConfig":"13"},{"size":663,"mtime":1608538902560,"results":"19","hashOfConfig":"13"},{"size":835,"mtime":1609584179804,"results":"20","hashOfConfig":"13"},{"size":357,"mtime":1609864042326,"results":"21","hashOfConfig":"13"},{"size":362,"mtime":1609313218277,"results":"22","hashOfConfig":"13"},{"size":5086,"mtime":1609579944958,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"m8ckl2",{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/harsh/Desktop/whatsapp/src/index.js",[],["52","53"],"/home/harsh/Desktop/whatsapp/src/App.js",["54","55","56"],"import React, { useState } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar.js';\nimport Chat from './Chat.js';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Login from './Login.js';\nimport { useStateValue } from './StateProvider';\n\nfunction App() {\n\n  const [{ user }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"App\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"App__Body\">\n          <Router>\n            <Sidebar/>\n            <Switch>\n\n              <Route path=\"/rooms/:roomID\">\n                <Chat />\n              </Route>\n\n              <Route path=\"/\">\n              </Route>\n\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/home/harsh/Desktop/whatsapp/src/reportWebVitals.js",[],["57","58"],"/home/harsh/Desktop/whatsapp/src/Sidebar.js",["59"],"import React, { useEffect, useState } from 'react';\nimport './Sidebar.css';\nimport { Avatar, IconButton } from \"@material-ui/core\";\n\nimport SearchOutLined from '@material-ui/icons/SearchOutlined';\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport { useStateValue } from './StateProvider';\nimport SideBarChat from './SideBarChat.js';\nimport db from './firebase.js';\n\nfunction Sidebar(){\n\n  const [rooms, setRooms] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    db.collection('rooms').onSnapshot(snapshot => (\n      setRooms(snapshot.docs.map(doc => ({\n        id : doc.id,\n        data : doc.data()\n      })))\n    ))\n  }, [])\n\n  return(\n    <div className=\"sidebar\">\n      <div className=\"sidebar__header\">\n        <Avatar src={user?.photoURL}/>\n        <div className=\"sidebar__headerRight\">\n          <IconButton>\n            <DonutLargeIcon />\n          </IconButton>\n          <IconButton>\n            <ChatIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n      </div>\n\n      <div className=\"sidebar__search\">\n        <div className=\"sidebar__searchcontainer\">\n          <SearchOutLined />\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\n        </div>\n      </div>\n\n      <div className=\"sidebar__chats\">\n        <SideBarChat addNewChat/>\n        {rooms.map(room => (\n          <SideBarChat\n              key={room.id}\n              id={room.id}\n              name={room.data.Name}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar;\n","/home/harsh/Desktop/whatsapp/src/SideBarChat.js",[],"/home/harsh/Desktop/whatsapp/src/Chat.js",["60"],"import React, { useEffect, useState } from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport { AttachFile, MoreVert, SearchOutlined, InsertEmoticon, Mic } from '@material-ui/icons';\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport './Chat.css';\nimport firebase from \"firebase\";\nimport { useStateValue } from './StateProvider';\n\nfunction Chat(){\n\n  const [ input, setInput] = useState(\"\");\n  const [ seed, setSeed] = useState(\"\");\n  const { roomID } = useParams();\n  const [ roomName, setRoomName ] = useState(\"\");\n  const [ messages, setMessages ] = useState([]);\n  const [{ user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if(roomID){\n      db.collection('rooms')\n        .doc(roomID)\n        .onSnapshot(snapshot => {\n          setRoomName(snapshot.data().Name)\n        })\n\n      db.collection('rooms')\n        .doc(roomID)\n        .collection('message').orderBy('timestamp', 'asc')\n        .onSnapshot(snapshot => {\n          setMessages(snapshot.docs.map((doc) => doc.data()))\n        })\n      }\n  }, [roomID])\n\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, []);\n\n  const SendMessage = (e) => {\n    e.preventDefault();\n    // console.log(input);\n    db.collection('rooms')\n      .doc(roomID)\n      .collection('message').add({\n        message: input,\n        name: user.displayName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n\n    setInput(\"\");\n  }\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\n\n        <div className=\"chat__headerInfo\">\n          <h3>{roomName}</h3>\n          <p>last seen{\" \"}\n            {new Date(messages[messages.length - 1]?.timestamp?.toDate()).toUTCString()}</p>\n        </div>\n\n        <div className=\"chat__headerRight\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <AttachFile />\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n\n      </div>\n\n      <div className=\"chat__body\">\n        {messages.map((message) => (\n          <p className={`chat__message ${message.name === user.displayName && \"chat__reciever\"}`}>\n\n            {message.message}\n\n            <span className=\"chat__timestamp\">\n              {new Date(message.timestamp?.toDate()).toUTCString()}\n            </span>\n          </p>\n        ))}\n      </div>\n\n      <div  className=\"chat__footer\">\n        <InsertEmoticon />\n          <form>\n            <input value={input}\n                   onChange={e =>\n                   setInput(e.target.value)}\n                   placeholder=\"Type a message\"\n                   type=\"text\"\n            />\n            <button onClick={SendMessage} type=\"submit\">Send a Message</button>\n          </form>\n        <Mic />\n      </div>\n    </div>\n  )\n}\n\nexport default Chat;\n","/home/harsh/Desktop/whatsapp/src/firebase.js",[],"/home/harsh/Desktop/whatsapp/src/Login.js",["61"],"import React from 'react'\nimport './Login.css';\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport { actionTypes } from \"./reducer\";\n\nfunction Login() {\n  const [{}, dispatch] = useStateValue();\n\n  const signIn = () => {\n    auth.signInWithPopup(provider).then(result => {\n      dispatch({\n        type : actionTypes.SET_USER,\n        user: result.user,\n      });\n    }).catch((error) => {\n      alert(error.message);\n    })\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n\n        <div className=\"login__text\">\n          <h1>Sign in to WhatsApp</h1>\n        </div>\n\n        <Button onClick={signIn}>\n          Sign In With Google\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/harsh/Desktop/whatsapp/src/reducer.js",[],"/home/harsh/Desktop/whatsapp/src/StateProvider.js",[],"/home/harsh/Desktop/whatsapp/src/serviceWorker.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"70","line":5,"column":50,"nodeType":"68","messageId":"69","endLine":5,"endColumn":54},{"ruleId":"66","severity":1,"message":"71","line":11,"column":20,"nodeType":"68","messageId":"69","endLine":11,"endColumn":28},{"ruleId":"62","replacedBy":"72"},{"ruleId":"64","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"71","line":17,"column":20,"nodeType":"68","messageId":"69","endLine":17,"endColumn":28},{"ruleId":"66","severity":1,"message":"71","line":17,"column":20,"nodeType":"68","messageId":"69","endLine":17,"endColumn":28},{"ruleId":"74","severity":1,"message":"75","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":12},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'dispatch' is assigned a value but never used.",["78"],["79"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]